main    ADD R6, R6, -4      ;Allocate part of stack fram (RV, RA, OLD FP, X)
        str r7, r6, 2       ;Save R7 to RA
        str r5, r6, 1       ; save old fp
        add r5, r6, 0       ; Estableish FP
        add r6, r6, -2      ; Make room for y and z
        add r6, r6, -1      ; Make space to save r0
        str r0, r6, 0       ; save r0
        ld r0, five
        str r0, r5, 0       ; initialize x
        ld r0, seven
        str r0, r5, -1      ; initialze y
        add r6, r6, -2      ; create space for args
        ldr r0, r5, -1      ; get y
        str r0, r6, 1       ; put it on stack
        ldr r0, r5, 0       ; get x
        str r0, r6, 0       ; put it on stack
        jsr mult
        ldr r0, r6, 0       ; get answer
        str r0, r5, -2      ; store in z
        and r0, r0, 0       ; make a zero
        str r0, r5, 3       ; store in RV
        ldr r0, r5, -3      ; restore r0
        add r6, r5, 1       ; point sp at old fp
        ldr r5, r6, 0       ; restore old FP
        ldr r7, r6, 1       ; restore RA
        add r6, r6, 2       ; point SP at RV
        ret

five    .fill 5
seven   .fill 7

mult    add r6, r6, -4      ; make first part of frame
        str r7, r6, 2       ; store RA
        str r5, r6, 1       ; store old FP